<section class="relative w-full md:py-[100px] overflow-hidden">
  <div class="w-full pl-4 md:pl-12 lg:pl-20 py-8 flex flex-col lg:flex-row items-start gap-10 relative">

    <!-- Left Side -->
    <div class="w-full lg:w-1/3 text-center lg:text-left relative z-0">
      <h4 class="text-[18px] tracking-[2px] font-light uppercase">Loyal Coffee Drinkers</h4>
      <h2 class="ctm-Fjord-font">Say It Best</h2>

      <!-- Nav Arrows -->
      <div class="flex justify-center lg:justify-start gap-6 mt-6">
        <button id="prevBtn" class="text-3xl lg:text-5xl font-bold text-gray-800 hover:text-[#7B2D26] transition">
          &lt;
        </button>
        <button id="nextBtn" class="text-3xl lg:text-5xl font-bold text-gray-800 hover:text-[#7B2D26] transition">
          &gt;
        </button>
      </div>
    </div>

    <!-- Right Side (Testimonial Box) -->
    <div class="w-full lg:w-2/3 bg-black text-white px-8 py-12 rounded-l-[2rem] rounded-r-none relative z-0">
      <span class="text-6xl text-yellow-500">“</span>
      <p id="testimonialText" class="text-[18px] leading-relaxed transition-opacity duration-500 opacity-100">
        {{ section.blocks[0].settings.review_text }}
      </p>
      <p id="testimonialAuthor" class="mt-4 font-bold text-[20px] transition-opacity duration-500 opacity-100">
        {{ section.blocks[0].settings.reviewer_name }}
      </p>
    </div>

    <!-- ✅ Fixed Absolute Coffee Image -->
    {% if section.settings.coffee_image %}
      <img
        height=""
        width=""
        src="{{ section.settings.coffee_image | image_url }}"
        alt="coffee"
        class="xs:hidden md:block absolute bottom-[-10px] right-[1px] sm:bottom-[-10px] sm:right-[1px] md:bottom-[-70px] md:right-[0px] lg:bottom-[-30px] lg:left-[50px] xl:bottom-[-30px] xl:left-[180px] max-w-[220px] md:max-w-[300px] lg:max-w-[380px] z-1">

    {% endif %}

    <!-- ✅ Optional Extra Decorative Images -->
    {% for block in section.blocks %}
      {% if block.type == 'decor_image' and block.settings.image != blank %}
        <img
          height=""
          width=""
          src="{{ block.settings.image | image_url }}"
          alt="coffee decor"
          class="absolute max-w-[200px] md:max-w-[280px] lg:max-w-[380px] 
                 {{ block.settings.position_class }}" />
      {% endif %}
    {% endfor %}
  </div>
</section>

<script>
  document.addEventListener("DOMContentLoaded", () => {
  const testimonials = [
    {% assign testimonial_blocks = section.blocks | where: 'type', 'testimonial' %}
    {% for block in testimonial_blocks %}
      {
        text: {{ block.settings.review_text | json }},
        author: {{ block.settings.reviewer_name | json }}
      }{% unless forloop.last %},{% endunless %}
    {% endfor %}
  ];
  
  let currentIndex = 0;
  const textEl = document.getElementById("testimonialText");
  const authorEl = document.getElementById("testimonialAuthor");
  const prevBtn = document.getElementById("prevBtn");
  const nextBtn = document.getElementById("nextBtn");
  
  function showTestimonial(index) {
    if (!testimonials.length) return;
    textEl.style.opacity = 0;
    authorEl.style.opacity = 0;
  
    setTimeout(() => {
      textEl.textContent = testimonials[index].text;
      authorEl.textContent = testimonials[index].author;
      textEl.style.opacity = 1;
      authorEl.style.opacity = 1;
    }, 300);
  }
  
  function nextTestimonial() {
    currentIndex = (currentIndex + 1) % testimonials.length;
    showTestimonial(currentIndex);
  }
  
  prevBtn?.addEventListener("click", () => {
    currentIndex = (currentIndex - 1 + testimonials.length) % testimonials.length;
    showTestimonial(currentIndex);
  });
  
  nextBtn?.addEventListener("click", nextTestimonial);
  
  // ✅ Autoplay Logic
  {% if section.settings.autoplay_enabled %}
    let autoplayInterval = setInterval(nextTestimonial, {{ section.settings.autoplay_delay | times: 1000 }});
  
    // Pause autoplay on hover, resume on leave
    const sliderEl = document.querySelector("section");
    sliderEl.addEventListener("mouseenter", () => clearInterval(autoplayInterval));
    sliderEl.addEventListener("mouseleave", () => {
      autoplayInterval = setInterval(nextTestimonial, {{ section.settings.autoplay_delay | times: 1000 }});
    });
  {% endif %}
  
  // Init
  showTestimonial(currentIndex);
  });
</script>

{% schema %}
  {
    "name": "Testimonial Slider",
    "settings": [
      {
        "type": "image_picker",
        "id": "coffee_image",
        "label": "Main Coffee Image (fixed position)"
      }, {
        "type": "checkbox",
        "id": "autoplay_enabled",
        "label": "Enable Autoplay",
        "default": true
      }, {
        "type": "range",
        "id": "autoplay_delay",
        "label": "Autoplay Delay (seconds)",
        "default": 5,
        "min": 2,
        "max": 15,
        "step": 1
      }
    ],
    "blocks": [
      {
        "type": "testimonial",
        "name": "Testimonial",
        "settings": [
          {
            "type": "textarea",
            "id": "review_text",
            "label": "Review Text",
            "default": "We love this coffee... amazing taste without bitterness!"
          }, {
            "type": "text",
            "id": "reviewer_name",
            "label": "Reviewer Name",
            "default": "John D."
          }
        ]
      }, {
        "type": "decor_image",
        "name": "Extra Decorative Image",
        "settings": [
          {
            "type": "image_picker",
            "id": "image",
            "label": "Upload Extra Coffee/Beans Image"
          }, {
            "type": "text",
            "id": "position_class",
            "label": "Tailwind Position Classes",
            "default": "top-10 right-10"
          }
        ]
      }
    ],
    "presets": [
      {
        "name": "Testimonial Slider",
        "category": "Testimonials",
        "blocks": [
          {
            "type": "testimonial"
          }, {
            "type": "testimonial"
          }
        ]
      }
    ]
  }
{% endschema %}